package {{package}}

{{#imports}}import {{import}}
{{/imports}}

import services._
import com.wordnik.swagger.core.ApiPropertiesReader

import org.scalatra.{ TypedParamSupport, ScalatraServlet }
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }

import scala.collection.JavaConverters._

class {{className}} (implicit val swagger: Swagger) extends ScalatraServlet 
    with JacksonJsonSupport
    with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "{{className}}"
  override protected val applicationName: Option[String] = Some("{{baseName}}")

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
{{#operations}}
{{#operation}}
  {{newline}}

  val {{nickname}}Operation = (apiOperation[{{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}Unit{{/returnType}}]("{{nickname}}")
      summary "{{{summary}}}"
      parameters(
        {{#allParams}}
        {{#queryParameter}}
        queryParam[{{dataType}}]("{{paramName}}").description(""){{#notRequired}}.optional{{/notRequired}}{{#defaultValue}}.defaultValue({{{defaultValue}}}){{/defaultValue}}
        {{/queryParameter}}
        {{#pathParameter}}
        pathParam[{{dataType}}]("{{paramName}}").description(""){{#defaultValue}}.defaultValue({{{defaultValue}}}){{/defaultValue}}
        {{/pathParameter}}
        {{#headerParameter}}
        headerParam[{{dataType}}]("{{paramName}}").description(""){{#notRequired}}.optional{{/notRequired}}{{#defaultValue}}.defaultValue({{{defaultValue}}}){{/defaultValue}}
        {{/headerParameter}}
        {{#bodyParameter}}
        bodyParam[{{dataType}}]("{{paramName}}").description(""){{#notRequired}}.optional{{/notRequired}}{{#defaultValue}}.defaultValue({{{defaultValue}}}){{/defaultValue}}
        {{/bodyParameter}}
        {{#hasMore}},{{/hasMore}}
        {{/allParams}})
  )
  

  {{httpMethod}}("{{path}}",operation({{nickname}}Operation)) {
    {{>service_call}}
  }

{{/operation}}
{{/operations}}
}